---

- name: '{{ ansible_distribution }} - Telegraf: Add repository InfluxDB for telegraf from influxdata'
  yum_repository:
    name: "InfluxDB"
    description: "InfluxDB Yum Repository"
    baseurl: 'https://repos.influxdata.com/rhel/$releasever/$basearch/stable'
    enabled: true
    gpgcheck: true
    gpgkey: "https://repos.influxdata.com/influxdb.key"
  become: true


# Installing telegraf agent
- name: "Telegraf: Install agent {{ base_telegraf_service_name }}"
  package:
    name: "{{ base_telegraf_service_name }}"
    state: present
  become: true


- name: "Python: Installing packages {{ base_telegraf_python_package }}"
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ base_telegraf_python_package }}"
  become: yes


- name: "Python: python{{ base_telegraf_python_version }} -m pip install packages"
  shell: "python{{ base_telegraf_python_version }} -m pip install --proxy='{{ http_proxy }}' {{ item }}"
  with_items:
    - "{{ base_telegraf_pip_modules }}"
  become: yes


# Required Folder Creation with correct user / group
- name: 'Telegraf: Create folders'
  file:
    path: "{{ item }}"
    state: 'directory'
    owner: "{{ base_telegraf_user }}"
    group: "{{ base_telegraf_group }}"
    mode: '0755'
  with_items:
    - "{{ base_telegraf_dir_base }}"
    - "{{ base_telegraf_dir_logs }}"
    - "{{ base_telegraf_dir_metrics }}"
  become: yes


- name: 'Telegraf: Copy telegraf configuration file'
  template:
    src: 'telegraf.conf.j2'
    dest: "{{ base_telegraf_config_basedir }}/telegraf.conf"
    owner: "{{ base_telegraf_user }}"
    group: "{{ base_telegraf_group }}"
  become: true
  when: ansible_virtualization_type == "docker"
  become: true
  notify: base_telegraf_restart_in_container


- name: 'Telegraf: Copy telegraf configuration file'
  template:
    src: 'telegraf.conf.j2'
    dest: "{{ base_telegraf_config_basedir }}/telegraf.conf"
    owner: "{{ base_telegraf_user }}"
    group: "{{ base_telegraf_group }}"
  become: true
  when: ansible_virtualization_type != "docker"
  become: true
  notify: base_telegraf_restart_no_container


- name: 'Telegraf: Copy base configuration file'
  template:
    src: 'system.conf.j2'
    dest: "{{ base_telegraf_config_extradir }}/system.conf"
    owner: "{{ base_telegraf_user }}"
    group: "{{ base_telegraf_group }}"
  when: ansible_virtualization_type != "docker"
  become: true
  notify: base_telegraf_restart_no_container


- name: 'Telegraf: Copy base configuration file'
  template:
    src: 'system.conf.j2'
    dest: "{{ base_telegraf_config_extradir }}/system.conf"
    owner: "{{ base_telegraf_user }}"
    group: "{{ base_telegraf_group }}"
  when: ansible_virtualization_type == "docker"
  become: true
  notify: base_telegraf_restart_in_container


- name: 'base_telegraf_restart for systemd'
  systemd:
    name: "{{ base_telegraf_service_name }}"
    state: restarted
    daemon_reload: true
  become: true
  when:
    - ansible_virtualization_type != "docker"

- name: "base_telegraf_restart for init.d "
  service:
    name: "{{ base_telegraf_service_name }}"
    state: restarted
  when:
    - ansible_virtualization_type == "docker"

- name: "Logrotate: Copy logrotate file: {{ base_telegraf_logrotate_file }}"
  template:
    src: 'logrotate.telegraf.j2'
    dest: "{{ base_telegraf_logrotate_file }}"
  become: true
  notify: base_telegraf_logrotate
